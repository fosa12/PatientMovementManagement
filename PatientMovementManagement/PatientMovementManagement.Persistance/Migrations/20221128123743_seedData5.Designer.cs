// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientMovementManagement.Persistance;

#nullable disable

namespace PatientMovementManagement.Persistance.Migrations
{
    [DbContext(typeof(PatientMovementDbContext))]
    [Migration("20221128123743_seedData5")]
    partial class seedData5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.DayInWorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkEnd")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkPlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkStart")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("WorkPlanId");

                    b.ToTable("DaysInWorkPlan");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            StatusId = 1,
                            WorkEnd = new DateTime(2022, 11, 28, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPlanId = 1,
                            WorkStart = new DateTime(2022, 11, 28, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            StatusId = 1,
                            WorkEnd = new DateTime(2022, 11, 29, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPlanId = 1,
                            WorkStart = new DateTime(2022, 11, 29, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            StatusId = 1,
                            WorkEnd = new DateTime(2022, 11, 30, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPlanId = 1,
                            WorkStart = new DateTime(2022, 11, 30, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            StatusId = 1,
                            WorkEnd = new DateTime(2022, 12, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPlanId = 1,
                            WorkStart = new DateTime(2022, 12, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            StatusId = 1,
                            WorkEnd = new DateTime(2022, 12, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            WorkPlanId = 1,
                            WorkStart = new DateTime(2022, 12, 1, 8, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3684),
                            CreatedBy = "SYSTEM",
                            FirstName = "Jan",
                            LastName = "Kowalski",
                            Position = "Lekarz",
                            Specialization = "Ortopeda",
                            StatusId = 1,
                            UserGuid = new Guid("98fa81c6-6138-46c2-b8f3-48423d8ba2b8")
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3747),
                            CreatedBy = "SYSTEM",
                            FirstName = "Andrzej",
                            LastName = "Lesno",
                            Position = "Lekarz",
                            Specialization = "Chirurg ogólny",
                            StatusId = 1,
                            UserGuid = new Guid("de29efab-23ff-4bed-a8db-63f35ca033e5")
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3756),
                            CreatedBy = "SYSTEM",
                            FirstName = "Edward",
                            LastName = "Abramczuk",
                            Position = "Lekarz",
                            Specialization = "Kardiolog",
                            StatusId = 1,
                            UserGuid = new Guid("d10e1087-20e1-447b-8345-6e9611afd586")
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3765),
                            CreatedBy = "SYSTEM",
                            FirstName = "Ewa",
                            LastName = "Kowalska",
                            Position = "Lekarz",
                            Specialization = "Okulista",
                            StatusId = 1,
                            UserGuid = new Guid("ce6b5893-e96b-4205-8782-76054a2e3784")
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3772),
                            CreatedBy = "SYSTEM",
                            FirstName = "Janina",
                            LastName = "Konieczna",
                            Position = "Lekarz",
                            Specialization = "Onkolog",
                            StatusId = 1,
                            UserGuid = new Guid("b6d34076-64cd-4939-9a6e-35fa89938241")
                        });
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PESEL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserGuid")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3791),
                            CreatedBy = "SYSTEM",
                            FirstName = "Piotr",
                            LastName = "Konieczny",
                            PESEL = "99050443415",
                            StatusId = 1,
                            UserGuid = new Guid("6207233a-1fd5-4032-80c5-039bf7f62a13")
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3802),
                            CreatedBy = "SYSTEM",
                            FirstName = "Andrzej",
                            LastName = "Wajda",
                            PESEL = "48080132121",
                            StatusId = 1,
                            UserGuid = new Guid("4ce5d169-aeb9-44ca-864b-9e02959fce38")
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3811),
                            CreatedBy = "SYSTEM",
                            FirstName = "Jan",
                            LastName = "Jagiełło",
                            PESEL = "92030332444",
                            StatusId = 1,
                            UserGuid = new Guid("2728354a-70c3-4dbc-a7f9-078b27a6fd1e")
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3820),
                            CreatedBy = "SYSTEM",
                            FirstName = "Krystyna",
                            LastName = "Kowalska",
                            PESEL = "05241477321",
                            StatusId = 1,
                            UserGuid = new Guid("c41ebf5c-bb1e-4173-af49-13a2be331269")
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(2022, 11, 28, 13, 37, 43, 465, DateTimeKind.Local).AddTicks(3828),
                            CreatedBy = "SYSTEM",
                            FirstName = "Michał",
                            LastName = "Żabiński",
                            PESEL = "04300798759",
                            StatusId = 1,
                            UserGuid = new Guid("0df563c6-7033-44a6-bb2f-c82706f02cb8")
                        });
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Visit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diagnosis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsVisitTookPlace")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NextVisitRecomended")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<string>("Recommendations")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("VisitCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PatientId");

                    b.ToTable("Visits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 1,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST01",
                            VisitDateTime = new DateTime(2022, 9, 11, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 2,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST02",
                            VisitDateTime = new DateTime(2022, 11, 10, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 2,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST03",
                            VisitDateTime = new DateTime(2022, 10, 20, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 3,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST04",
                            VisitDateTime = new DateTime(2022, 10, 20, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 4,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST05",
                            VisitDateTime = new DateTime(2022, 10, 26, 15, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 5,
                            IsVisitTookPlace = false,
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST06",
                            VisitDateTime = new DateTime(2022, 10, 24, 14, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 7,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 1,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za tydzień",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST07",
                            VisitDateTime = new DateTime(2022, 11, 25, 11, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 8,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 2,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za tydzień",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST08",
                            VisitDateTime = new DateTime(2022, 11, 17, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 9,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 2,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za tydzień",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST09",
                            VisitDateTime = new DateTime(2022, 11, 20, 16, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 10,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 3,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za tydzień",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST011",
                            VisitDateTime = new DateTime(2022, 11, 15, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 11,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 4,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za trzy tygodnie",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST010",
                            VisitDateTime = new DateTime(2022, 11, 17, 12, 30, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 12,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            Diagnosis = "Testpwa diagnoza zdiagnozowano wiele rzeczy: dawdaw, dwadaw, dwadw, dwadadw, dwadwa, awddwdawa, dwadwaadw",
                            EmployeeId = 5,
                            IsVisitTookPlace = true,
                            NextVisitRecomended = "Za dwa tygodnie",
                            PatientId = 1,
                            StatusId = 1,
                            VisitCode = "TEST12",
                            VisitDateTime = new DateTime(2022, 11, 20, 13, 30, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.WorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Inactivated")
                        .HasColumnType("datetime2");

                    b.Property<string>("InactivatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.ToTable("WorkPlans");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "SYSTEM",
                            EmployeeId = 1,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.DayInWorkPlan", b =>
                {
                    b.HasOne("PatientMovementManagement.Domain.Entities.WorkPlan", "WorkPlan")
                        .WithMany("DaysInWorkPlan")
                        .HasForeignKey("WorkPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkPlan");
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Visit", b =>
                {
                    b.HasOne("PatientMovementManagement.Domain.Entities.Employee", "Employee")
                        .WithMany("Visits")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PatientMovementManagement.Domain.Entities.Patient", "Patient")
                        .WithMany("Visits")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.WorkPlan", b =>
                {
                    b.HasOne("PatientMovementManagement.Domain.Entities.Employee", "Employee")
                        .WithOne("WorkPlan")
                        .HasForeignKey("PatientMovementManagement.Domain.Entities.WorkPlan", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Visits");

                    b.Navigation("WorkPlan")
                        .IsRequired();
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.Patient", b =>
                {
                    b.Navigation("Visits");
                });

            modelBuilder.Entity("PatientMovementManagement.Domain.Entities.WorkPlan", b =>
                {
                    b.Navigation("DaysInWorkPlan");
                });
#pragma warning restore 612, 618
        }
    }
}
